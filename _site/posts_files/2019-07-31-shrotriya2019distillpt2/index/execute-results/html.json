{
  "hash": "76d0a56e3500aa2ef07471c09b423d14",
  "result": {
    "markdown": "---\ntitle: \"Upgrading Distill Blog Settings\"\ndescription: |\n  The second part of a series on how I upgraded this `Distill` themed blog\ncategories: [distill]\nslug: shrotriya2019distillpt2\ndate: \"2019-07-31\"\nimage: images/step_01_disqus_02.png\nbibliography: ../../refs.bib\nformat: \n  html:\n    code-link: true\nexecute:\n  echo: true\neditor_options: \n  markdown: \n    wrap: 80\n---\n\n\n\n\n## Step 0: Introduction\n\nThis is a meta blogpost and a second-part in a series to describe how I setup\nthis personal academic blog using the amazing\n[distill](https://rstudio.github.io/distill/){target=\"_blank\"} package by the\n[RStudio](h//www.rstudio.com/){target=\"_blank\"} team.\n\nThe first part of this meta blogpost series can be [found\nhere](https://www.shamindras.com/posts/2019-07-11-setting-up-a-distill-blog-with-netlify/){target=\"_blank\"},\nwhere I detailed the steps to setup this blog using Netlify and Google Domains.\nIf you haven't setup a `distill` themed blog then you are encouraged to check\nit out before reading this post.\n\nFortunately `distill` comes with easy to configure settings as well see below.\nI've only implemented some of the options available. I should note that the\nRStudio `distill` team has already created an [excellent distill blog creation\ntutorial](https://rstudio.github.io/distill/blog.html){target=\"_blank\"} which I\nthoroughly used and highly recommend to new users to check out.\n\n<aside> Admittedly this blogpost is verbose, but hopefully the details help\n**new users** of the `distill` blogging package.  </aside>\n\nWith that said, here are some key upgrades I made to this blog.\n\n## Step 1: Setup Disqus comments\n\nI really wanted to setup some comments system for each blogpost. This way I can\nlearn new tips from readers and find out how to improve posts going forward. I\nwill go with the recommended [Disqus comments\noption](https://disqus.com){target=\"_blank\"} from the [distill\nblog](https://rstudio.github.io/distill/blog.html#comments-and-sharing){target=\"_blank\"}.\nI simply created a [Disqus](https://disqus.com){target=\"_blank\"} account and\nselected **Get Started**. I then clicked the following button to *Install\nDisqus on my site*.\n\n<center>\n\n::: {.cell hash='index_cache/html/step-01-02-screenshot_284ea3c24477471600645327fcbc2d0c'}\n::: {.cell-output-display}\n![Getting Started with Disqus](/Users/shamindras/DROPBOX/REPOS/ss_personal_quarto_blog/posts/2019-07-31-shrotriya2019distillpt2/images/step_01_disqus_02.png){width=353 class=external}\n:::\n:::\n\n</center>\n\nI was then presented with the following Disqus site configuration menu. I\nentered `https:://www.shamindras.com/` for my **Website Name** and manually set\nmy **Disqus shortname** to be `shamindras-distill` to be easier to remember and\nspecific to this site, in case I make more websites later on. This Disqus\nshortname is important to note down (🖊) as we'll see shortly.\n\n<center>\n\n::: {.cell hash='index_cache/html/step-01-03-screenshot_8e0768c3e1586aff5324e81eb90fb763'}\n::: {.cell-output-display}\n![Setup Disqus shortname](/Users/shamindras/DROPBOX/REPOS/ss_personal_quarto_blog/posts/2019-07-31-shrotriya2019distillpt2/images/step_01_disqus_03.png){width=668 class=external}\n:::\n:::\n\n</center>\n\nAfter clicking **Create Site** in the previous menu I proceeded to select the\n_free_ plan option by subscribing to the *Basic, Free, Ads Supported* comments\noption as seen below:\n\n<aside> As a student got to always know when to get a freebie `r\nemo::ji(\"smile\")` </aside>\n\n<center>\n\n::: {.cell hash='index_cache/html/step-01-04-screenshot_946d4e57962cfff8f43b7996ec16b5f9'}\n::: {.cell-output-display}\n![Select Basic (Free, Ads supported) mode](/Users/shamindras/DROPBOX/REPOS/ss_personal_quarto_blog/posts/2019-07-31-shrotriya2019distillpt2/images/step_01_disqus_04.png){width=776 class=external}\n:::\n:::\n\n</center>\n\n\nIn terms of implementing `Disqus` on my site, I clicked on the following button\nto install Disqus on my site manually:\n\n<center>\n\n::: {.cell hash='index_cache/html/step-01-05-screenshot_ceeaa6562af3548c532fa4d841e39e22'}\n::: {.cell-output-display}\n![Manual installation of Disqus](/Users/shamindras/DROPBOX/REPOS/ss_personal_quarto_blog/posts/2019-07-31-shrotriya2019distillpt2/images/step_01_disqus_05.png){width=507 class=external}\n:::\n:::\n\n</center>\n\nBefore finishing the manual installation of `Disqus` I ensured that I set the\nfollowing configuration options. I particularly like setting an opiononated\ncomments policy and selected the [Grist Comment\nPolicy](https://grist.org/grist-comment-policy/){target=\"_blank\"}:\n\n<center>\n\n::: {.cell hash='index_cache/html/step-01-06-screenshot_cbd2f1838e8932e8ef966a4090092cce'}\n::: {.cell-output-display}\n![Disqus Configuration Settings](/Users/shamindras/DROPBOX/REPOS/ss_personal_quarto_blog/posts/2019-07-31-shrotriya2019distillpt2/images/step_01_disqus_06.png){width=822 class=external}\n:::\n:::\n\n</center>\n\nFinally to ensure that the implementation is completed I added the following\nline to the `_site.yml` post using the **Disqus shortname** set earlier i.e.\n`shamindras-distill` and ensuring `hidden: true` so that the comments are not\nexpanded by default:\n\n<aside> **Note:** You can see my `_site.yml` with these settings\n[here](https://github.com/shamindras/ss_personal_distill_blog/blob/master/_site.yml)\n</aside>\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ncollections:\n  posts:\n    disqus:\n      shortname: shamindras-distill\n      hidden: true\n```\n:::\n\n\nWe now see the following comments option at the bottom of every post:\n\n<center>\n\n::: {.cell hash='index_cache/html/step-01-07-screenshot_95823c8754870d63ee07fb1c087e7f83'}\n::: {.cell-output-display}\n![Distill Disqus Comments Selection](/Users/shamindras/DROPBOX/REPOS/ss_personal_quarto_blog/posts/2019-07-31-shrotriya2019distillpt2/images/step_01_disqus_07.png){width=230 class=external}\n:::\n:::\n\n</center>\n\nYou can read more about setting up comments from the official `distill` blog\n[here](https://rstudio.github.io/distill/blog.html#comments-and-sharing)\n\n## Step 2: Setup Google Analytics tracking\n\nI also wanted to setup basic user viewing tracking for my site. Fortunately\n`distill` can be easily configured to work with [Google\nAnalytics](https://analytics.google.com/analytics/web){target=\"_blank\"}. In\norder to set this up I simply created an account for `Google Analytics` (using\nmy personal gmail account). I then logged in and selected the option to track\nmy website as follows:\n\n<center>\n\n::: {.cell hash='index_cache/html/step-02-01-screenshot_a5c412cf4387943fac80c562b66314c2'}\n::: {.cell-output-display}\n![Google Analytics Settings](/Users/shamindras/DROPBOX/REPOS/ss_personal_quarto_blog/posts/2019-07-31-shrotriya2019distillpt2/images/step_02_ga_01.png){width=417 class=external}\n:::\n:::\n\n</center>\n\nNote that I specified the **Website Name** field to be `shamindras-distill`.\nThis is indeed the same as the Disqus shortname from earlier but did not have\nto be. I just did it for consistency and easy reference. I was then given a\n**Google Analytics token** and concluded this setup by adding the token to the\n`_site.yml` file as follows:\n\n<aside> **Note:** You can see my `_site.yml` with these settings\n[here](https://github.com/shamindras/ss_personal_distill_blog/blob/master/_site.yml)\n</aside>\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ngoogle_analytics: \"UA-145015693-1\"\n```\n:::\n\n\nYou can read more about setting up Google Analytics from the official `distill`\nblog [here](https://rstudio.github.io/distill/website.html#google-analytics)\n\n## Step 3: Add Netlify Status Badge\n\nSince [Netlify](https://www.netlify.com){target=\"_blank\"} is the web hosting\nplatform for my site (see setup details\n[here](https://www.shamindras.com/posts/2019-07-11-setting-up-a-distill-blog-with-netlify/#step-8-deploy-your-website){target=\"_blank\"}).\nI just logged into my Netlify account and went to my **Site Details** and\nobtained the following code from the **Status Badges** option.\n\n<center>\n\n::: {.cell hash='index_cache/html/step-03-01-screenshot_e215eec759022bcb615cc2b536b7d33d'}\n::: {.cell-output-display}\n![Netlify Badge Code](/Users/shamindras/DROPBOX/REPOS/ss_personal_quarto_blog/posts/2019-07-31-shrotriya2019distillpt2/images/step_03_netlify_01.png){width=1234 class=external}\n:::\n:::\n\n</center>\n\nI copy-pasted the above code in at the top of my site `README.md` file. This\nlet's me quickly know whether my website is up and running as expected by\nsimply checking out my [github\npage](https://github.com/shamindras/ss_personal_distill_blog){target=\"_blank\"}.\n\n<aside> **Note:** You can see my `README.md` with these settings\n[here](https://github.com/shamindras/ss_personal_distill_blog/blob/master/README.md)\n</aside>\n\n## Step 4: Add blog post sharing options\n\nIt is easy to configure distill to allow for easy sharing of posts using a\nvariety of social media platforms. I allow for **twitter, linkedin, pinterest,\nand facebook.** I did this by simply adding the following line in the\n`_site.yml` file:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ncollections:\n  posts:\n    share: [twitter, linkedin, pinterest, facebook]\n```\n:::\n\n\nNow the following sharing options appear at the bottom of every post:\n\n<center>\n\n::: {.cell hash='index_cache/html/step-04-01-screenshot_b4bd9d3eb344ac8c296ccd2159a3c8b1'}\n::: {.cell-output-display}\n![Distill Sharing Options](/Users/shamindras/DROPBOX/REPOS/ss_personal_quarto_blog/posts/2019-07-31-shrotriya2019distillpt2/images/step_04_sharing_01.png){width=191 class=external}\n:::\n:::\n\n</center>\n\nI also added in the following lines to `_site.yml` to ensure that [twitter\ncards](https://rstudio.github.io/distill/metadata.html#twitter-card){target=\"_blank\"}\nare correctly generated when posts are shared on twitter:\n\n<aside> **Note:** You can see my `_site.yml` with these settings\n[here](https://github.com/shamindras/ss_personal_distill_blog/blob/master/_site.yml)\n</aside>\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ntwitter:\n  site: \"@shamindraas\"\n  creator: \"@shamindraas\"\n```\n:::\n\n\n## Step 5: Add Corrections/Change Tracking and RSS feed\n\nI frequently make edits to blogposts and intend to do so going forward.\nFortunately `distill` makes it easy **track changes/corrections** made to\nblogposts. I did this by simply adding the site repo url to the `_site.yml` as\nfollows:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nrepository_url: https://github.com/shamindras/ss_personal_distill_blog\n```\n:::\n\n\nNow the following appears at the bottom of all blogposts:\n\n<center>\n\n::: {.cell hash='index_cache/html/step-05-01-screenshot_d0a0c3a55aabefdae52f0b6a62141c4c'}\n::: {.cell-output-display}\n![Changes and Corrections Tracking](/Users/shamindras/DROPBOX/REPOS/ss_personal_quarto_blog/posts/2019-07-31-shrotriya2019distillpt2/images/step_05_trackcorr_01.png){width=489 class=external}\n:::\n:::\n\n</center>\n\nSo users can easily track changes or file any concerns as issues, though\nhopefully the `Disqus` comment feature makes this easier for everyone.\n\nFinally it is easy to add an **RSS feed** for the blog by simply adding the\nfollowing to `_site.yml`:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nbase_url: https://www.shamindras.com/\nnavbar:\n  left:\n    - icon: fa fa-rss\n      href: index.xml\n```\n:::\n\n\n<aside> **Note:** You can see my `_site.yml` with these settings\n[here](https://github.com/shamindras/ss_personal_distill_blog/blob/master/_site.yml)\n</aside>\n\nThe critical elements are adding in the `base_url` fields and adding in `fa\nfa-rss` which is derived from the `index.xml` file.  The `index.xml` file is\nautomatically generated from the `index.Rmd` when you render the `distill` blog\nusing the usual command:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nrmarkdown::render_site(here::here())\n```\n:::\n\n\n## Next Steps\n\nIn terms of core `distill` blog settings, these are the main options that I'm\nhappy to implement for now. For me the next steps are more about **customizing\nmy own blog workflow**. This will involve setting up utilities to\nautomatically:\n\n- **Wrap Rmd files** to 80 characters for consistency\n- Quickly **delete unused files** e.g. `DS_Store` files on mac\n- **Clear knitr cache** for all posts and thoroughly re-render the\nsite\n\nI expect to do this using a combination of `R` functions/`Makefile` workflow,\nbut do stay tuned!\n\n## Concluding Thoughts\n\nAs it can be seen it is quite easy to customize `distill` for commonly required\nfeatures. Really great work by the RStudio team in making such customizations\nso user-friendly 👍.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}